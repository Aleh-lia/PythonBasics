print('Задание 1')
# 1. Выяснить тип результата выражений:
# ● 15 * 3
# ● 15 / 3
# # ● 15 // 2
# # ● 15 ** 2
# print(15 * 3 , type(15 * 3))
# print(15 / 3 , type(15 / 3))
# print(15 // 3 ,type (15 // 3))
# print(15 ** 3 , type(15 ** 3))
print(f"{'':-^90}")
print('Задание 2')
# 2. Дан список:
# ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха',
# 'была', '+5', 'градусов']
# Необходимо его обработать — обособить каждое целое число (вещественные не трогаем)
# кавычками (добавить кавычку до и кавычку после элемента списка, являющегося числом) и
# дополнить нулём до двух целочисленных разрядов:
# ['в', '"', '05', '"', 'часов', '"', '17', '"', 'минут',
# 'температура', 'воздуха', 'была', '"', '+05', '"', 'градусов']
# Сформировать из обработанного списка строку:
# в "05" часов "17" минут температура воздуха была "+05" градусов
# Подумать, какое условие записать, чтобы выявить числа среди элементов списка? Как
# модифицировать это условие для чисел со знаком?
# Примечание: если обособление чисел кавычками не будет получаться - можете вернуться к его
# реализации позже. Главное: дополнить числа до двух разрядов нулём!

my_list = ['в', '5', 'часов', '17', 'минут',
              'температура', 'воздуха', 'была', '+5', 'градусов']
# length_of_list: int = len(my_list)
store_id = id(my_list)
new_list = []
for elem in my_list:
    if elem.isdigit():
        new_list.append(f'"{int(elem):02}"')
    elif (elem.startswith('+') or elem.startswith('-')) and elem[1:].isdigit():
        new_list.append(f'"{elem[0]}{int(elem[1:]):02}"')
    else:
        new_list.append(elem)

out_info = ' '.join(new_list)
print(out_info)


print(f"{'':-^90}")
print('Задание 3')
# 3. *(вместо задачи 2) Решить задачу 2 не создавая новый список (как говорят, in place). Эта задача
# намного серьёзнее, чем может сначала показаться.


print(f"{'':-^90}")
print('Задание 4')
# 4. Дан список, содержащий искажённые данные с должностями и именами сотрудников:
# ['инженер-конструктор Игорь', 'главный бухгалтер МАРИНА',
# 'токарь высшего разряда нИКОЛАй', 'директор аэлита']
# Известно, что имя сотрудника всегда в конце строки. Сформировать из этих имён и вывести на
# экран фразы вида: 'Привет, Игорь!' Подумать, как получить имена сотрудников из элементов
# списка, как привести их к корректному виду. Можно ли при этом не создавать новый список?

list = ['инженер-конструктор Игорь',
              'главный бухгалтер МАРИНА',
              'токарь высшего разряда нИКОЛАй',
              'директор аэлита']

for string in list:
    correct_name = string.split()[-1].capitalize()
    print(f"Привет, {correct_name}!")

print(f"{'':-^90}")
print('Задание 5')
    # 5. Создать вручную список, содержащий цены на товары (10–20 товаров), например:
    # 19[57.8, 46.51, 97, ...]
    # A. Вывести на экран эти цены через запятую в одну строку, цена должна отображаться в виде
    # <r> руб <kk> коп (например «5 руб 04 коп»). Подумать, как из цены получить рубли и копейки,
    # как добавить нули, если, например, получилось 7 копеек или 0 копеек (должно быть 07 коп
    # или 00 коп).
    # B. Вывести цены, отсортированные по возрастанию, новый список не создавать (доказать, что
    # объект списка после сортировки остался тот же).
    # C. Создать новый список, содержащий те же цены, но отсортированные по убыванию.
    # D. Вывести цены пяти самых дорогих товаров. Сможете ли вывести цены этих товаров по
    # возрастанию, написав минимум кода?

price = [10.23, 15.7, 2.3, 1, 5.73, 7.5, 8.06, 20, 18.73, 45.25, 91.01,
        115.07, 88.44, 92, 35.11]

store_id = id(price)
print(price)
print('id =', store_id)

print(f"{'':*^60}")
print('A)')
end_word: str = ", "
for i, num in enumerate(price):
    fix_price = str(f"{float(num):.2f}").split(".")
    if i == len(price) - 1:
        end_word = "\n"
    price_a = (f"{fix_price[0]} руб {fix_price[1]} коп")
    print(price_a, end=end_word)
print(f"{'':*^60}")
print('B)')
print(f"id перед сортировкой {store_id}")
price.sort()
print(price)
print(f"id после сортировки {id(price)}")

print(f"{'':*^60}")
print('C)')
copy_price = price.copy()
copy_price.sort(reverse=True)
print(copy_price)

print(f"{'':*^60}")
print('D)')
print("Пять самых дорогих товаров", price[10:15])



